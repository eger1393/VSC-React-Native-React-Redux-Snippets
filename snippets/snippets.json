{
	"Import react": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "imr",
		"body": [
			"import React from 'react';"
		],
		"description": "Import react"
	},
	"Import react and anather": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "imra",
		"body": [
			"import React, { $1 } from 'react';"
		],
		"description": "Import react and anather"
	},
	"Import from styled": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "ifs",
		"body": [
			"import { $1 } from './styled';"
		],
		"description": "Import from styled"
	},
	"Import PropTypes": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "impt",
		"body": [
			"import PropTypes from 'prop-types';"
		],
		"description": "Import PropTypes"
	},
	"Import Styled-Components": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "ims",
		"body": "import styled from 'styled-components';",
		"description": "Import Styled-Components"
	},
	"Import Redux": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "icr",
		"body": "import { connect } from 'react-redux';"
	},
	"Export constant": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "rct",
		"body": "export const $1 = '$1';"
	},
	"Print to console": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "cl",
		"body": [
			"console.log($1)"
		],
		"description": "Log output to console"
	},
	"Console Log": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "log",
		"body": [
			"console.log('====================================');",
			"console.log($1);",
			"console.log('====================================');"
		]
	},
	"Export default": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "ed",
		"body": [
			"export default $1;"
		],
		"description": "Export default"
	},
	"Stateless Component": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "sl",
		"body": [
			"const ${1:ComponentName} = props => (",
			"\t",
			");",
			"",
			"export default ${1:ComponentName};"
		]
	},
	"Stateless Component Return": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "slr",
		"body": [
			"const ${1:ComponentName} = props => {",
			"\treturn (",
			"\t\t$2",
			"\t);",
			"}",
			"",
			"export default ${1:ComponentName};"
		]
	},
	"Redux Reducer": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "rrd",
		"body": [
			"export default (state = $1, action) => {",
			"\tswitch (action.type) {",
			"\t\tcase $2:",
			"\t\t\t$3",
			"\t\tdefault:",
			"\t\t\treturn state;",
			"\t}",
			"};"
		]
	},
	"ComponentDidMount": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "cdm",
		"body": [
			"componentDidMount() {",
			"\t$1",
			"}"
		]
	},
	"ComponentWillMount": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "cwm",
		"body": [
			"componentWillMount() {",
			"\t$1",
			"}"
		]
	},
	"ComponentWillUpdate": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "cwu",
		"body": [
			"componentWillUpdate() {",
			"\t$1",
			"}"
		]
	},
	"ComponentDidUpdate": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "cdu",
		"body": [
			"componentDidUpdate(prevProps, prevState) {",
			"\t$1",
			"}"
		]
	},
	"ShouldComponentUpdate": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "scu",
		"body": [
			"shouldComponentUpdate(nextProps, nextState, nextContext) {",
			"\t $1",
			"}"
		]
	},
	"Component Class": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "ccs",
		"body": [
			"class ${1:ComponentName} extends Component {",
			"\tstate = { $2 }",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t$3",
			"\t\t);",
			"\t}",
			"}",
			"",
			"export default ${1:ComponentName};"
		]
	},
	"PureComponent Class": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "pcs",
		"body": [
			"class ${1:ComponentName} extends PureComponent {",
			"\tstate = { $2 }",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t$3",
			"\t\t);",
			"\t}",
			"}",
			"",
			"export default ${1:ComponentName};"
		]
	},
	"Component Class With Redux": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "ccsr",
		"body": [
			"class ${TM_FILENAME_BASE} extends Component {",
			"\tstate = { $1 }",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t$2",
			"\t\t);",
			"\t}",
			"}",
			"",
			"export default connect($4, $5)(${TM_FILENAME_BASE});"
		]
	},
	"Export Styled Component": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "esc",
		"body": [
			"export const $1 = styled.$2`",
			"\t$3",
			"`"
		]
	},
	"Const function in functional component": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "fif",
		"body": [
			"const $1 = ($2) => {",
			"\t$3",
			"}"
		]
	},
	"Test": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "tt",
		"body": [
			"test('$1', () => {",
			"\t$2",
			"});"
		]
	},
	"Test Describe": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "tdesc",
		"body": [
			"describe('$1', () => {",
			"\t$2",
			"});"
		]
	},
	"Test it": {
		"scope": "javascriptreact,javascript,jsx",
		"prefix": "tit",
		"body": [
			"it('should $1', $2($3) => {",
			"\t$4",
			"});"
		]
	}
}
